#include <stdio.h>
#include <unistd.h>
#include <stdlib.h>
#include <string.h>

// Function to read the current CPU usage from the /proc/stat file
float get_cpu_usage() {
    long double a[4], b[4], loadavg;
    FILE *fp;

    // Read first set of CPU statistics
    fp = fopen("/proc/stat","r");
    if (fp == NULL) {
        perror("Failed to open /proc/stat");
        exit(EXIT_FAILURE);
    }
    fscanf(fp, "%*s %Lf %Lf %Lf %Lf", &a[0], &a[1], &a[2], &a[3]);
    fclose(fp);

    // Sleep for a second to get the second set of CPU statistics
    sleep(1);

    // Read second set of CPU statistics
    fp = fopen("/proc/stat","r");
    if (fp == NULL) {
        perror("Failed to open /proc/stat");
        exit(EXIT_FAILURE);
    }
    fscanf(fp, "%*s %Lf %Lf %Lf %Lf", &b[0], &b[1], &b[2], &b[3]);
    fclose(fp);

    // Calculate the CPU usage
    loadavg = ((b[0]+b[1]+b[2]) - (a[0]+a[1]+a[2])) / 
              ((b[0]+b[1]+b[2]+b[3]) - (a[0]+a[1]+a[2]+a[3]));

    return loadavg;
}

int main() {
    FILE *log_file;
    char *filename = "cpu_usage.log";

    // Open log file for writing
    log_file = fopen(filename, "w");
    if (log_file == NULL) {
        perror("Failed to open log file");
        return EXIT_FAILURE;
    }

    // Loop to record CPU usage
    for (int i = 0; i < 10; ++i) {
        float usage = get_cpu_usage();
        fprintf(log_file, "CPU Usage: %.2f%%\n", usage * 100);
        printf("Logged CPU Usage: %.2f%%\n", usage * 100);

        // Sleep for 5 seconds
        sleep(5);
    }

    // Close log file
    fclose(log_file);
    printf("CPU usage logging completed.\n");

    return 0;
}
